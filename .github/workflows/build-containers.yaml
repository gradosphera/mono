name: Build Docker Images

on:
  push:
    branches:
      - testnet
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set docker tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "DOCKER_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          fi
          
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Free disk space before building
        run: |
          echo "Освобождаем место на диске..."
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          docker system prune -af
          df -h
          
      # Сборка и публикация каждого образа с соответствующим target
      - name: Build desktop image
        run: |
          docker build --no-cache --target desktop -t dicoop/desktop:${{ env.DOCKER_TAG }} .
          docker push dicoop/desktop:${{ env.DOCKER_TAG }}
          # Очистка после сборки
          docker image prune -f
          docker system prune -f
          df -h
          
      - name: Build controller image
        run: |
          docker build --target controller -t dicoop/coopback:${{ env.DOCKER_TAG }} .
          docker push dicoop/coopback:${{ env.DOCKER_TAG }}
          # Очистка после сборки
          docker image prune -f
          docker system prune -f
          df -h
          
      - name: Build parser image
        run: |
          docker build --target parser -t dicoop/cooparser:${{ env.DOCKER_TAG }} .
          docker push dicoop/cooparser:${{ env.DOCKER_TAG }}
          # Очистка после сборки
          docker image prune -f
          docker system prune -f
          df -h
          
      - name: Build notificator image
        run: |
          docker build --target notificator -t dicoop/notificator:${{ env.DOCKER_TAG }} .
          docker push dicoop/notificator:${{ env.DOCKER_TAG }}
          # Очистка после сборки
          docker image prune -f
          docker system prune -f
          df -h
          
      # Отправка хука для деплоя
      - name: Trigger deployment webhook
        if: ${{ success() }}
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Хук для продакшена
            curl -X POST ${{ vars.PRODUCTION_WEBHOOK_URL }} \
              -H 'Content-Type: application/json' \
              -d '${{ env.DOCKER_TAG }}'
          else
            # Хук для тестнета
            curl -X POST ${{ vars.TESTNET_WEBHOOK_URL }} \
              -H 'Content-Type: application/json' \
              -d '${{ env.DOCKER_TAG }}'
          fi