// Generated by eosio-abi2ts 1.2.2 - eosio::abi/1.2

export type IAsset = string
export type IName = string
export type IChecksum256 = string
export type IPublicKey = string
export type ISignature = string
export type ITimePointSec = string
export type IInt64 = number | string
export type IUint32 = number
export type IUint64 = number | string
export type IFloat64 = number

export type IBPairNameAssetE = IPairNameAsset

export interface IAddauthor {
  coopname: IName
  application: IName
  project_hash: IChecksum256
  author: IName
}

export interface IAddcontrib {
  coopname: IName
  project_hash: IChecksum256
  username: IName
}

export interface IAllocate {
  coopname: IName
  application: IName
  project_hash: IChecksum256
  amount: IAsset
}

export interface IAppendix {
  id: IUint64
  coopname: IName
  username: IName
  project_hash: IChecksum256
  appendix_hash: IChecksum256
  status: IName
  created_at: ITimePointSec
  appendix: IDocument2
}

export interface IApprovecmmt {
  coopname: IName
  commit_hash: IChecksum256
  empty_document: IDocument2
}

export interface IApprovedebt {
  coopname: IName
  debt_hash: IChecksum256
  approved_statement: IDocument2
}

export interface IApproveexpns {
  coopname: IName
  application: IName
  approver: IName
  expense_hash: IChecksum256
  approved_statement: IDocument2
}

export interface IApproveinvst {
  coopname: IName
  invest_hash: IChecksum256
  approved_statement: IDocument2
}

export interface IApprovereg {
  coopname: IName
  contributor_hash: IChecksum256
  contract: IDocument2
}

export interface IApproverslt {
  coopname: IName
  application: IName
  approver: IName
  result_hash: IChecksum256
  approved_statement: IDocument2
}

export interface IApprovewthd2 {
  coopname: IName
  application: IName
  approver: IName
  withdraw_hash: IChecksum256
  approved_return_statement: IDocument2
}

export interface IApprovewthd3 {
  coopname: IName
  application: IName
  approver: IName
  withdraw_hash: IChecksum256
  approved_return_statement: IDocument2
}

export interface IApprvappndx {
  coopname: IName
  appendix_hash: IChecksum256
  approved_document: IDocument2
}

export interface IApprvpinv {
  coopname: IName
  invest_hash: IChecksum256
  approved_statement: IDocument2
}

export interface IAuthrslt {
  coopname: IName
  result_hash: IChecksum256
  decision: IDocument2
}

export interface ICapauthexpns {
  coopname: IName
  expense_hash: IChecksum256
  authorization: IDocument2
}

export interface ICapauthwthd2 {
  coopname: IName
  withdraw_hash: IChecksum256
  authorization: IDocument2
}

export interface ICapauthwthd3 {
  coopname: IName
  withdraw_hash: IChecksum256
  authorization: IDocument2
}

export interface ICapdeclexpns {
  coopname: IName
  expense_hash: IChecksum256
}

export interface ICapdeclwthd2 {
  coopname: IName
  withdraw_hash: IChecksum256
  reason: string
}

export interface ICapdeclwthd3 {
  coopname: IName
  withdraw_hash: IChecksum256
  reason: string
}

export interface ICloseproject {
  coopname: IName
  project_hash: IChecksum256
}

export interface ICmpltproject {
  coopname: IName
  project_hash: IChecksum256
}

export interface ICmpltvoting {
  coopname: IName
  project_hash: IChecksum256
}

export interface ICommit {
  id: IUint64
  coopname: IName
  application: IName
  username: IName
  status: IName
  project_hash: IChecksum256
  commit_hash: IChecksum256
  amounts: IGenerationAmounts
  created_at: ITimePointSec
}

export interface IConfig {
  coordinator_bonus_percent: IFloat64
  expense_pool_percent: IFloat64
  coordinator_invite_validity_days: IUint32
  voting_period_in_days: IUint32
  authors_voting_percent: IFloat64
  creators_voting_percent: IFloat64
}

export interface IContributor {
  id: IUint64
  coopname: IName
  username: IName
  contributor_hash: IChecksum256
  created_at: ITimePointSec
  status: IName
  is_external_contract: boolean
  contract: IDocument2
  appendixes: IChecksum256[]
  rate_per_hour: IAsset
  debt_amount: IAsset
  capital_available: IAsset
  reward_per_share_last: IInt64
}

export interface IConvertsegm {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
  convert_hash: IChecksum256
  wallet_amount: IAsset
  capital_amount: IAsset
  project_amount: IAsset
  convert_statement: IDocument2
}

export interface ICountsData {
  total_authors: IUint64
  total_coordinators: IUint64
  total_creators: IUint64
  total_investors: IUint64
  total_contributors: IUint64
  total_commits: IUint64
}

export interface ICreatecmmt {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
  commit_hash: IChecksum256
  creator_hours: IUint64
}

export interface ICreatedebt {
  coopname: IName
  username: IName
  project_hash: IChecksum256
  debt_hash: IChecksum256
  amount: IAsset
  repaid_at: ITimePointSec
  statement: IDocument2
}

export interface ICreateexpnse {
  coopname: IName
  application: IName
  expense_hash: IChecksum256
  project_hash: IChecksum256
  creator: IName
  amount: IAsset
  description: string
  statement: IDocument2
}

export interface ICreateinvest {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
  invest_hash: IChecksum256
  amount: IAsset
  statement: IDocument2
}

export interface ICreatepinv {
  coopname: IName
  application: IName
  username: IName
  invest_hash: IChecksum256
  amount: IAsset
  statement: IDocument2
}

export interface ICreateproj {
  coopname: IName
  project_hash: IChecksum256
  parent_hash: IChecksum256
  title: string
  description: string
  meta: string
}

export interface ICreatewthd2 {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
  withdraw_hash: IChecksum256
  amount: IAsset
  return_statement: IDocument2
}

export interface ICreatewthd3 {
  coopname: IName
  application: IName
  username: IName
  withdraw_hash: IChecksum256
  amount: IAsset
  return_statement: IDocument2
}

export interface ICrpsData {
  total_capital_contributors_shares: IAsset
  author_base_cumulative_reward_per_share: IInt64
  author_bonus_cumulative_reward_per_share: IInt64
  coordinator_cumulative_reward_per_share: IInt64
  contributor_cumulative_reward_per_share: IInt64
}

export interface IDclineappndx {
  coopname: IName
  appendix_hash: IChecksum256
  reason: string
}

export interface IDebt {
  id: IUint64
  coopname: IName
  username: IName
  status: IName
  debt_hash: IChecksum256
  project_hash: IChecksum256
  repaid_at: ITimePointSec
  amount: IAsset
  statement: IDocument2
  approved_statement: IDocument2
  authorization: IDocument2
  memo: string
}

export interface IDebtauthcnfr {
  coopname: IName
  debt_hash: IChecksum256
  decision: IDocument2
}

export interface IDebtpaycnfrm {
  coopname: IName
  debt_hash: IChecksum256
}

export interface IDebtpaydcln {
  coopname: IName
  debt_hash: IChecksum256
  reason: string
}

export interface IDeclineapprv {
  coopname: IName
  result_hash: IChecksum256
  decline_reason: IDocument2
}

export interface IDeclinecmmt {
  coopname: IName
  commit_hash: IChecksum256
  reason: string
}

export interface IDeclinedebt {
  coopname: IName
  debt_hash: IChecksum256
  reason: string
}

export interface IDeclineinvst {
  coopname: IName
  invest_hash: IChecksum256
  decline_statement: IDocument2
}

export interface IDeclinereg {
  coopname: IName
  contributor_hash: IChecksum256
  reason: string
}

export interface IDeclpinv {
  coopname: IName
  invest_hash: IChecksum256
  declined_statement: IDocument2
}

export interface IDeclrslt {
  coopname: IName
  result_hash: IChecksum256
  decision: IDocument2
}

export interface IDelproject {
  coopname: IName
  project_hash: IChecksum256
}

export interface IDiallocate {
  coopname: IName
  application: IName
  project_hash: IChecksum256
}

export interface IDocument2 {
  version: string
  hash: IChecksum256
  doc_hash: IChecksum256
  meta_hash: IChecksum256
  meta: string
  signatures: ISignatureInfo[]
}

export interface IExpandexpnss {
  coopname: IName
  project_hash: IChecksum256
  additional_expenses: IAsset
}

export interface IExpense {
  id: IUint64
  coopname: IName
  application: IName
  username: IName
  status: IName
  project_hash: IChecksum256
  expense_hash: IChecksum256
  fund_id: IUint64
  amount: IAsset
  description: string
  expense_statement: IDocument2
  approved_statement: IDocument2
  authorization: IDocument2
  spended_at: ITimePointSec
}

export interface IExppaycnfrm {
  coopname: IName
  expense_hash: IChecksum256
}

export interface IFactPool {
  hour_cost: IAsset
  creators_hours: IUint64
  return_cost_coefficient: IFloat64
  creators_base_pool: IAsset
  authors_base_pool: IAsset
  coordinators_base_pool: IAsset
  creators_bonus_pool: IAsset
  authors_bonus_pool: IAsset
  contributors_bonus_pool: IAsset
  target_expense_pool: IAsset
  accumulated_expense_pool: IAsset
  used_expense_pool: IAsset
  invest_pool: IAsset
  coordinators_investment_pool: IAsset
  program_invest_pool: IAsset
  total_generation_pool: IAsset
  total_contribution: IAsset
  total: IAsset
}

export interface IFinalvoting {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
}

export interface IFundprog {
  coopname: IName
  amount: IAsset
  memo: string
}

export interface IFundproj {
  coopname: IName
  project_hash: IChecksum256
  amount: IAsset
  memo: string
}

export interface IGenerationAmounts {
  hour_cost: IAsset
  creators_hours: IUint64
  creators_base_pool: IAsset
  authors_base_pool: IAsset
  creators_bonus_pool: IAsset
  authors_bonus_pool: IAsset
  total_generation_pool: IAsset
  contributors_bonus_pool: IAsset
  total_contribution: IAsset
  total: IAsset
}

export interface IGlobalState {
  coopname: IName
  global_available_invest_pool: IAsset
  program_membership_funded: IAsset
  program_membership_available: IAsset
  program_membership_distributed: IAsset
  program_membership_cumulative_reward_per_share: IInt64
  config: IConfig
}

export interface IInvest {
  id: IUint64
  coopname: IName
  username: IName
  invest_hash: IChecksum256
  project_hash: IChecksum256
  status: IName
  amount: IAsset
  invested_at: ITimePointSec
  statement: IDocument2
  coordinator: IName
  coordinator_amount: IAsset
}

export interface IMembershipCrps {
  cumulative_reward_per_share: IInt64
  total_shares: IAsset
  funded: IAsset
  available: IAsset
  distributed: IAsset
  converted_funds: IAsset
}

export interface IOpenproject {
  coopname: IName
  project_hash: IChecksum256
}

export interface IPairNameAsset {
  first: IName
  second: IAsset
}

export interface IPlanPool {
  hour_cost: IAsset
  creators_hours: IUint64
  return_cost_coefficient: IFloat64
  creators_base_pool: IAsset
  authors_base_pool: IAsset
  coordinators_base_pool: IAsset
  creators_bonus_pool: IAsset
  authors_bonus_pool: IAsset
  contributors_bonus_pool: IAsset
  target_expense_pool: IAsset
  invest_pool: IAsset
  coordinators_investment_pool: IAsset
  program_invest_pool: IAsset
  total_generation_pool: IAsset
  total: IAsset
}

export interface IProgramInvest {
  id: IUint64
  coopname: IName
  username: IName
  invest_hash: IChecksum256
  status: IName
  invested_at: ITimePointSec
  statement: IDocument2
  amount: IAsset
}

export interface IProgramWithdraw {
  id: IUint64
  coopname: IName
  withdraw_hash: IChecksum256
  username: IName
  status: IName
  amount: IAsset
  statement: IDocument2
  created_at: ITimePointSec
}

export interface IProject {
  id: IUint64
  coopname: IName
  project_hash: IChecksum256
  parent_hash: IChecksum256
  status: IName
  master: IName
  title: string
  description: string
  meta: string
  counts: ICountsData
  plan: IPlanPool
  fact: IFactPool
  crps: ICrpsData
  voting: IVotingData
  membership: IMembershipCrps
  created_at: ITimePointSec
}

export interface IProjectWallet {
  id: IUint64
  coopname: IName
  project_hash: IChecksum256
  username: IName
  shares: IAsset
  last_membership_reward_per_share: IInt64
  membership_available: IAsset
}

export interface IProjectWithdraw {
  id: IUint64
  coopname: IName
  project_hash: IChecksum256
  withdraw_hash: IChecksum256
  username: IName
  status: IName
  amount: IAsset
  statement: IDocument2
  created_at: ITimePointSec
}

export interface IPushrslt {
  coopname: IName
  application: IName
  project_hash: IChecksum256
  result_hash: IChecksum256
  contribution_amount: IAsset
  debt_amount: IAsset
  statement: IDocument2
}

export interface IRefreshprog {
  coopname: IName
  application: IName
  username: IName
}

export interface IRefreshproj {
  coopname: IName
  application: IName
  project_hash: IChecksum256
  username: IName
}

export interface IRegcontrib {
  coopname: IName
  application: IName
  username: IName
  contributor_hash: IChecksum256
  rate_per_hour: IAsset
  is_external_contract: boolean
  contract: IDocument2
}

export interface IResult {
  id: IUint64
  project_hash: IChecksum256
  result_hash: IChecksum256
  coopname: IName
  username: IName
  status: IName
  created_at: ITimePointSec
  creator_base_amount: IAsset
  author_base_amount: IAsset
  debt_amount: IAsset
  creator_bonus_amount: IAsset
  author_bonus_amount: IAsset
  generation_amount: IAsset
  capitalist_bonus_amount: IAsset
  total_amount: IAsset
  available_for_return: IAsset
  available_for_convert: IAsset
  statement: IDocument2
  authorization: IDocument2
  act: IDocument2
}

export interface IReturnunused {
  coopname: IName
  application: IName
  project_hash: IChecksum256
  username: IName
}

export interface IRfrshsegment {
  coopname: IName
  project_hash: IChecksum256
  username: IName
}

export interface ISegment {
  id: IUint64
  project_hash: IChecksum256
  username: IName
  status: IName
  is_author: boolean
  is_creator: boolean
  is_coordinator: boolean
  is_investor: boolean
  is_contributor: boolean
  investor_amount: IAsset
  investor_base: IAsset
  creator_base: IAsset
  creator_bonus: IAsset
  author_base: IAsset
  author_bonus: IAsset
  coordinator_investments: IAsset
  coordinator_base: IAsset
  contributor_bonus: IAsset
  last_author_base_reward_per_share: IInt64
  last_author_bonus_reward_per_share: IInt64
  last_coordinator_reward_per_share: IInt64
  last_contributor_reward_per_share: IInt64
  capital_contributor_shares: IAsset
  project_contributor_shares: IAsset
  last_known_invest_pool: IAsset
  provisional_amount: IAsset
  debt_amount: IAsset
  debt_settled: IAsset
  equal_author_bonus: IAsset
  direct_creator_bonus: IAsset
  voting_bonus: IAsset
  total_segment_base_cost: IAsset
  total_segment_bonus_cost: IAsset
  total_segment_cost: IAsset
  available_base_after_pay_debt: IAsset
  converted_to_wallet: IAsset
  converted_to_capital: IAsset
  converted_to_project: IAsset
}

export interface ISetconfig {
  coopname: IName
  initiator: IName
  cfg: IConfig
}

export interface ISetmaster {
  coopname: IName
  project_hash: IChecksum256
  master: IName
}

export interface ISetplan {
  coopname: IName
  project_hash: IChecksum256
  plan_creators_hours: IUint64
  plan_expenses: IAsset
  plan_hour_cost: IAsset
}

export interface ISettledebt {
  coopname: IName
}

export interface ISignact1 {
  coopname: IName
  application: IName
  result_hash: IChecksum256
  act: IDocument2
}

export interface ISignact2 {
  coopname: IName
  application: IName
  result_hash: IChecksum256
  act: IDocument2
}

export interface ISignappndx {
  coopname: IName
  application: IName
  username: IName
  project_hash: IChecksum256
  appendix_hash: IChecksum256
  document: IDocument2
}

export interface ISignatureInfo {
  id: IUint32
  signed_hash: IChecksum256
  signer: IName
  public_key: IPublicKey
  signature: ISignature
  signed_at: ITimePointSec
  meta: string
}

export interface IStartproject {
  coopname: IName
  project_hash: IChecksum256
}

export interface ISubmitvote {
  coopname: IName
  application: IName
  voter: IName
  project_hash: IChecksum256
  votes: IBPairNameAssetE[]
}

export interface IVote {
  id: IUint64
  project_hash: IChecksum256
  voter: IName
  recipient: IName
  amount: IAsset
  voted_at: ITimePointSec
}

export interface IVotingAmounts {
  authors_equal_spread: IAsset
  creators_direct_spread: IAsset
  authors_bonuses_on_voting: IAsset
  creators_bonuses_on_voting: IAsset
  total_voting_pool: IAsset
  voting_amount: IAsset
  authors_equal_per_author: IAsset
}

export interface IVotingData {
  total_voters: IUint32
  votes_received: IUint32
  authors_voting_percent: IFloat64
  creators_voting_percent: IFloat64
  amounts: IVotingAmounts
  created_at: ITimePointSec
  voting_deadline: ITimePointSec
}
