/**
 * @page expense_management_process Управление расходами проекта
 * @defgroup public_capital_expense_process Процесс управления расходами
 * @ingroup public_capital_processes
 * 
 * Процесс резервирования, авторизации и оплаты расходов проекта через внешний шлюз.
 * Обеспечивает контролируемое использование средств из accumulated_expense_pool
 * с соблюдением процедур согласования.
 * 
 * ## Назначение процесса
 * 
 * Управление расходами обеспечивает:
 * - Контролируемое использование средств проекта на целевые расходы
 * - Прозрачность и подотчётность всех трат
 * - Соблюдение сметных ограничений проекта
 * - Юридическое оформление всех платежей
 * 
 * ## Диаграмма процесса
 * 
 * \htmlonly
 * <div class="mermaid">
 * sequenceDiagram
 *     participant M as Мастер/Создатель
 *     participant C as Capital Contract
 *     participant S as Soviet Contract
 *     participant G as Gateway Contract
 *     participant L as Ledger Contract
 *     
 *     M->>C: 1. createexpnse(заявка на расход)
 *     Note over C: Резервирование средств
 *     Note over C: accumulated_expense_pool -= amount
 *     C->>S: 2. soviet::create_approval
 *     
 *     S->>C: 3. approveexpns(одобрение председателем)
 *     C->>S: 4. soviet::create_agenda
 *     
 *     alt Авторизация советом
 *         S->>C: 5. capauthexpns(решение совета)
 *         C->>G: 6. Gateway::create_outpay(платёж)
 *         
 *         alt Успешная оплата
 *             G->>C: 7. exppaycnfrm()
 *             Note over C: used_expense_pool += amount
 *             C->>L: 8. Ledger::операция по фонду хозяйственной деятельности
 *         else Отказ оплаты
 *             G->>C: 7. exppayfail()
 *             Note over C: Возврат в accumulated_expense_pool
 *         end
 *         
 *     else Отклонение советом
 *         S->>C: 5. capdeclexpns()
 *         Note over C: Возможен возврат в accumulated_expense_pool
 *     end
 * </div>
 * \endhtmlonly
 * 
 * ## Пошаговое описание
 * 
 * ### Шаг 1: Создание заявки на расход
 * @ref capital::createexpnse "Создание расхода проекта"
 * 
 * Мастер или уполномоченный создатель подаёт заявку на расход:
 * 
 * **Входящий документ:** Заявление на расход средств проекта (подписано инициатором)
 * 
 * **Предварительные условия:**
 * - Проект в статусе `active`
 * - accumulated_expense_pool >= запрашиваемая_сумма
 * - Инициатор имеет права на создание расходов
 * - Расход соответствует целям проекта
 * 
 * **Входящие параметры:**
 * - expense_hash - уникальный идентификатор расхода
 * - project_hash - проект, к которому относится расход
 * - creator - инициатор расхода
 * - amount - сумма расхода
 * - description - описание назначения расхода
 * - statement - обоснование необходимости
 * 
 * **Типы расходов проекта:**
 * - Закупка материалов и комплектующих
 * - Оплата услуг субподрядчиков
 * - Аренда оборудования и помещений
 * - Транспортные расходы
 * - Коммунальные платежи
 * - Лицензионные платежи
 * - Консультационные услуги
 * 
 * **Немедленные действия:**
 * @post accumulated_expense_pool -= amount - резервирование средств
 * 
 * **Результат:** Средства зарезервированы, заявка направлена на рассмотрение
 * 
 * ### Шаг 2: Одобрение расхода председателем
 * @ref capital::approveexpns "Одобрение расхода председателем"
 * 
 * Председатель рассматривает заявку и принимает предварительное решение:
 * 
 * **Входящий документ:** Принятое председателем заявление на расход
 * 
 * **Критерии оценки:**
 * - Соответствие расхода целям и плану проекта
 * - Обоснованность суммы и необходимости
 * - Наличие достаточных средств в проекте
 * - Соблюдение сметных ограничений
 * 
 * **Результат:** Заявка одобрена и направлена в совет для авторизации
 * 
 * ### Шаг 3: Авторизация расхода советом
 * @ref capital::capauthexpns "Авторизация расхода советом"
 * 
 * Совет принимает окончательное решение об авторизации расхода:
 * 
 * **Входящий документ:** Решение совета об авторизации расхода
 * 
 * **Рассматриваемые вопросы:**
 * - Целесообразность расхода для достижения целей проекта
 * - Соответствие рыночным ценам и условиям
 * - Влияние на общий бюджет проекта
 * - Альтернативные варианты решения задачи
 * 
 * **При авторизации:**
 * @post Gateway::create_outpay(amount, recipient, purpose) - создание исходящего платежа
 * 
 * **Результат:** Расход авторизован, инициирован платёж через шлюз
 * 
 * ### Шаг 4: Подтверждение оплаты
 * @ref capital::exppaycnfrm "Подтверждение оплаты расхода"
 * 
 * Gateway подтверждает успешное выполнение платежа:
 * 
 * **Проводки по проекту:**
 * @post used_expense_pool += amount - фиксация использованных средств
 * 
 * **Проводки по фондам:**
 * @post Ledger::операция(Ledger::accounts::ECONOMIC_ACTIVITY_FUND, amount) - списание на фонд хозяйственной деятельности
 * 
 * **Обновления записей:**
 * - Удаление заявки из таблицы expenses
 * - Фиксация факта оплаты в логах проекта
 * - Обновление остатков доступных средств
 * 
 * **Результат:** Расход подтверждён и учтён в фондах кооператива
 * 
 * ### Альтернативные пути
 * 
 * #### Отклонение советом
 * @ref capital::capdeclexpns "Отклонение расхода советом"
 * 
 * При отклонении советом:
 * - Указывается причина отказа
 * - Возможен возврат средств в accumulated_expense_pool
 * - Заявка удаляется из системы
 * 
 * #### Отказ в оплате
 * При технических проблемах с платежом:
 * - Средства возвращаются в accumulated_expense_pool
 * - Заявка может быть подана повторно
 * - Фиксируется причина отказа
 * 
 * ## Контроль расходов и бюджета
 * 
 * ### Сметные ограничения
 * Расходы ограничены доступными средствами:
 * - accumulated_expense_pool формируется из инвестиций
 * - target_expense_pool определяет плановый лимит
 * - Нельзя потратить больше привлечённых средств
 * 
 * ### Категории расходов
 * Расходы классифицируются по типам:
 * - **Прямые материальные затраты** - сырьё, материалы, комплектующие
 * - **Услуги сторонних организаций** - субподряд, консультации, аренда
 * - **Накладные расходы** - коммунальные услуги, связь, транспорт
 * - **Лицензии и права** - программное обеспечение, патенты
 * 
 * ### Мониторинг исполнения бюджета
 * Система обеспечивает контроль:
 * - accumulated_expense_pool - доступные средства
 * - used_expense_pool - фактически потрачено
 * - Остаток = accumulated_expense_pool + резерв - used_expense_pool
 * 
 * ## Принципы финансовой дисциплины
 * 
 * ### Предварительное резервирование
 * - Средства резервируются до авторизации
 * - Исключается превышение лимитов
 * - Обеспечивается доступность средств на момент оплаты
 * 
 * ### Многоуровневое согласование
 * - Инициатор → Председатель → Совет → Оплата
 * - Каждый уровень проверяет обоснованность
 * - Коллегиальность принятия решений
 * 
 * ### Учёт по факту оплаты
 * - used_expense_pool обновляется только после оплаты
 * - Резерв не считается расходом до подтверждения
 * - Точный учёт фактических затрат
 * 
 * ## Примеры расходов
 * 
 * ### Пример 1: IT-проект
 * **Типичные расходы:**
 * - Хостинг и домены: 50,000 RUB/месяц
 * - Сторонние API и сервисы: 30,000 RUB/месяц
 * - Дизайн и UX-услуги: 200,000 RUB
 * - Тестирование и аудит: 150,000 RUB
 * **Итого:** ~1,000,000 RUB за проект
 * 
 * ### Пример 2: Производственный проект
 * **Типичные расходы:**
 * - Сырьё и материалы: 2,000,000 RUB
 * - Электроэнергия: 300,000 RUB
 * - Логистика: 500,000 RUB
 * - Сертификация: 200,000 RUB
 * **Итого:** ~3,000,000 RUB за проект
 * 
 * ## Интеграция с внешними системами
 * 
 * ### Gateway Contract
 * - Обеспечивает реальные платежи в фиатной валюте
 * - Подтверждает факт перечисления средств
 * - Предоставляет отчёты об операциях
 * 
 * ### Ledger Contract  
 * - Ведёт учёт по фондам кооператива
 * - Обеспечивает соответствие бухгалтерским требованиям
 * - Формирует отчётность для регуляторов
 * 
 * ### Внешние платёжные системы
 * - Банковские переводы
 * - Электронные платёжные системы
 * - Криптовалютные операции
 * 
 * ## Результат процесса
 * 
 * Система управления расходами обеспечивает:
 * 1. Контролируемое и прозрачное использование средств проекта
 * 2. Соблюдение бюджетных ограничений и финансовой дисциплины
 * 3. Юридическое оформление всех операций
 * 4. Интеграцию с внешними платёжными системами
 * 5. Точный учёт затрат для последующих расчётов
 * 
 * ## Связанные процессы
 * 
 * - @ref public_capital_project_investment_process "Инвестиции в проект" - формируют пул расходов
 * - @ref public_capital_program_investment_process "Программные инвестиции" - аллокация включает расходы
 * - @ref public_capital_planning_process "Планирование проекта" - план определяет target_expense_pool
 * - @ref public_capital_lifecycle_process "Жизненный цикл проекта" - расходы в активном проекте
 */
