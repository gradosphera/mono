/**
 * @page refresh_program_process Обновление кошелька программы
 * @defgroup public_capital_refresh_program_process Процесс обновления кошелька программы
 * @ingroup public_capital_processes
 *
 * Процесс применения накопленных программных членских взносов к кошельку участника.
 * Использует алгоритм CRPS для расчёта персональных начислений на основе 
 * кумулятивного показателя программы и доли участника.
 *
 * Процесс обновляет capital_available участника на основе разности между
 * текущим кумулятивным показателем программы и персональным слепком участника.
 *
 * ## Диаграмма процесса
 *
 * \htmlonly
 * <div class="mermaid">
 * sequenceDiagram
 *     participant P as Участник
 *     participant C as Capital Contract
 *
 *     P->>C: 1. refreshprog(участник)
 *     Note over C: Проверка договора УХД
 *     Note over C: Расчёт delta_crps
 *     Note over C: Расчёт new_reward
 *     Note over C: Обновление capital_available
 *     Note over C: Сохранение нового слепка CRPS
 * </div>
 * \endhtmlonly
 *
 * ## Пошаговое описание
 *
 * ### Шаг 1: Обновление кошелька программы
 * @ref capital::refreshprog "Обновление кошелька программы"
 *
 * Участник инициирует обновление своего кошелька программы для получения
 * накопленных доходов от программных членских взносов.
 *
 * **Предварительные условия:**
 * @pre Участник имеет активный договор УХД
 * @pre Участник зарегистрирован в программе капитализации
 *
 * **Механика расчёта:**
 * - participant_shares = capital_blocked + capital_available
 * - delta_crps = program_membership_cumulative_reward_per_share - last_program_membership_reward_per_share  
 * - new_reward = delta_crps × participant_shares
 *
 * **Обновления состояния:**
 * @post capital_available увеличивается на new_reward
 * @post last_program_membership_reward_per_share = program_membership_cumulative_reward_per_share
 *
 * Участник получает начисления пропорционально своей доле в программе.
 * Алгоритм CRPS обеспечивает справедливое распределение с учётом времени
 * вхождения в программу и исключает начисления задним числом.
 *
 * **Математический пример:**
 * Участник с долей 100000 рублей при cumulative_reward_per_share = 0.15
 * и last_reward_per_share = 0.05 получит: (0.15 - 0.05) × 100000 = 10000 рублей.
 *
 * ## Связанные процессы
 *
 * - @ref public_capital_fundprog_process "Регистрация программных взносов" - создаёт основу для начислений
 * - @ref public_capital_withdraw_from_program_process "Возврат из программы" - использует обновлённые средства
 * - @ref public_capital_conversion_process "Конвертация взносов" - создаёт доли для получения доходов
 */