/**
 * @page debt_management_process Управление ссудами участников
 * @defgroup public_capital_debt_process Процесс управления ссудами
 * @ingroup public_capital_processes
 * 
 * Процесс выдачи беспроцентных ссуд участникам проекта на основании их трудовых
 * и иных вкладов. Ссуды ограничены provisional_amount сегмента и погашаются
 * автоматически при сдаче результата в кооператив.
 * 
 * ## Назначение процесса
 * 
 * Система ссуд обеспечивает участникам ликвидность в процессе работы над проектом:
 * - Участники получают средства до завершения проекта
 * - Размер ссуды ограничен фактическими вкладами и привлечёнными инвестициями
 * - Ссуды беспроцентные, что стимулирует активное участие
 * - Автоматическое погашение при сдаче результата исключает проблемы с возвратом
 * 
 * ## Математические основы расчёта ссуд
 * 
 * ### Базовая формула provisional_amount
 * provisional_amount = (creator_base + author_base + coordinator_base) × (return_base_percent / 100)
 * 
 * где:
 * - creator_base - стоимость коммитов создателя
 * - author_base - авторская себестоимость (61.8% от создателей)  
 * - coordinator_base - координаторская премия от привлечённых инвестиций
 * - return_base_percent - коэффициент доступности средств (зависит от инвестиций)
 * 
 * ### Ограничения на выдачу
 * - Общий долг участника ≤ provisional_amount
 * - Сумма всех ссуд по проекту ≤ фактически привлечённые инвестиции
 * - return_base_percent рассчитывается как отношение инвестиций к базовым затратам
 * 
 * ## Диаграмма процесса
 * 
 * \htmlonly
 * <div class="mermaid">
 * sequenceDiagram
 *     participant P as Участник
 *     participant C as Capital Contract
 *     participant S as Soviet Contract
 *     participant G as Gateway Contract
 *     participant L as Loan Contract
 *     
 *     P->>C: 1. createdebt(заявление на ссуду)
 *     Note over C: Проверка лимитов
 *     Note over C: debt_amount + amount ≤ provisional_amount
 *     Note over C: Увеличение debt_amount в сегменте
 *     
 *     C->>S: 2. soviet::create_approval
 *     
 *     alt Одобрение председателем
 *         S->>C: 3. approvedebt()
 *         C->>S: 4. soviet::create_agenda
 *         
 *         alt Авторизация советом
 *             S->>C: 5. debtauthcnfr(решение совета)
 *             C->>G: 6. Gateway::create_outcome(платёж)
 *             
 *             alt Успешная оплата
 *                 G->>C: 7. debtpaycnfrm()
 *                 C->>L: 8. Создание записи о долге
 *                 Note over C: Долг зафиксирован
 *             else Отказ оплаты
 *                 G->>C: 7. debtpaydcln()
 *                 Note over C: Уменьшение debt_amount
 *             end
 *             
 *         else Отклонение советом
 *             S->>C: 5. declinedebt()
 *             Note over C: Уменьшение debt_amount
 *         end
 *         
 *     else Отклонение председателем
 *         S->>C: 3. declinereg()
 *         Note over C: Уменьшение debt_amount
 *     end
 *     
 *     Note over P,L: Погашение при сдаче результата
 *     P->>C: 9. pushrslt(с суммой долга)
 *     C->>L: 10. settledebt(автоматическое погашение)
 * </div>
 * \endhtmlonly
 * 
 * ## Пошаговое описание
 * 
 * ### Шаг 1: Создание заявки на ссуду
 * @ref capital::createdebt "Создание заявки на ссуду"
 * 
 * Участник подаёт заявку на получение беспроцентной ссуды:
 * 
 * **Входящий документ:** Заявление на получение ссуды (подписано участником)
 * 
 * **Предварительные условия:**
 * - Проект в статусе `active`
 * - Участник имеет активный сегмент в проекте
 * - debt_amount + запрашиваемая_сумма ≤ provisional_amount
 * - provisional_amount > 0 (есть вклады, обеспеченные инвестициями)
 * 
 * **Входящие параметры:**
 * - amount - запрашиваемая сумма ссуды
 * - repaid_at - планируемая дата погашения
 * - statement - обоснование необходимости ссуды
 * 
 * **Немедленные изменения:**
 * - Увеличение debt_amount в сегменте участника
 * - Создание заявки в таблице debts
 * - Резервирование суммы в лимите участника
 * 
 * ### Шаг 2: Одобрение заявки председателем
 * @ref capital::approvedebt "Одобрение заявки председателем"
 * 
 * Председатель рассматривает заявку и принимает предварительное решение:
 * - Оценивает обоснованность запроса
 * - Проверяет финансовое состояние проекта
 * - Подтверждает корректность расчётов
 * 
 * При одобрении заявка передаётся в совет для окончательного решения.
 * 
 * ### Шаг 3: Авторизация советом
 * @ref capital::debtauthcnfr "Авторизация выдачи ссуды советом"
 * 
 * Совет принимает окончательное решение о выдаче ссуды:
 * - Рассматривает целесообразность выдачи
 * - Оценивает риски для проекта
 * - Утверждает условия ссуды
 * 
 * **Входящий документ:** Решение совета об авторизации ссуды
 * 
 * При положительном решении инициируется исходящий платёж через Gateway.
 * 
 * ### Шаг 4: Подтверждение оплаты
 * @ref capital::debtpaycnfrm "Подтверждение оплаты ссуды"
 * 
 * Gateway подтверждает успешное перечисление средств участнику:
 * - Фиксируется факт получения средств участником
 * - Создаётся запись в контракте loan
 * - Увеличивается общий долг участника в системе
 * 
 * **Проводки:**
 * - Создание записи о долге в контракте loan
 * - Фиксация обязательства участника по возврату
 * 
 * **Результат:** Ссуда выдана, участник получил средства
 * 
 * ### Альтернативные пути: Отклонение и отказы
 * 
 * #### @ref capital::debtpaydcln "Отказ в оплате Gateway"
 * - Технический сбой при переводе средств
 * - Заявка удаляется, debt_amount уменьшается
 * - Участник может подать заявку повторно
 * 
 * #### @ref capital::declinedebt "Отклонение заявки"
 * - Может произойти на любом этапе рассмотрения
 * - debt_amount в сегменте уменьшается на отклонённую сумму
 * - Указывается причина отказа
 * 
 * ### Шаг 5: Погашение ссуды
 * @ref capital::settledebt "Погашение ссуды"
 * 
 * Ссуды погашаются автоматически при сдаче результата:
 * - В pushrslt указывается debt_amount для погашения
 * - Сумма долга вычитается из available_base_after_pay_debt
 * - Производится зачёт через контракт loan
 * 
 * **Проводки при погашении:**
 * - Списание долга в контракте loan
 * - Уменьшение обязательств участника
 * - Освобождение зарезервированных лимитов
 * 
 * ## Принципы управления рисками
 * 
 * ### Ограничение размера ссуд
 * - Ссуды не могут превышать фактические вклады участника
 * - Учитывается коэффициент обеспеченности инвестициями
 * - Исключается возможность получения ссуд без соответствующих вкладов
 * 
 * ### Автоматическое погашение
 * - Ссуды погашаются при сдаче результата в кооператив
 * - Исключается риск невозврата средств
 * - Участник не может получить вознаграждение без погашения долгов
 * 
 * ### Контроль ликвидности проекта
 * - Общая сумма ссуд ограничена привлечёнными инвестициями
 * - return_base_percent отражает доступность средств
 * - Предотвращается выдача ссуд сверх возможностей проекта
 * 
 * ## Примеры расчёта доступных ссуд
 * 
 * ### Пример 1: Создатель с коммитами
 * - creator_base = 100,000 RUB (50 часов × 2000 RUB/час)
 * - return_base_percent = 80% (инвестиции покрывают 80% базовых затрат)
 * - provisional_amount = 100,000 × 0.8 = 80,000 RUB
 * - **Доступная ссуда: до 80,000 RUB**
 * 
 * ### Пример 2: Автор проекта
 * - author_base = 61,800 RUB (61.8% от 100,000 RUB создателей)
 * - return_base_percent = 80%
 * - provisional_amount = 61,800 × 0.8 = 49,440 RUB
 * - **Доступная ссуда: до 49,440 RUB**
 * 
 * ### Пример 3: Координатор
 * - coordinator_base = 6,400 RUB (4% от привлечённых 160,000 RUB)
 * - return_base_percent = 80%
 * - provisional_amount = 6,400 × 0.8 = 5,120 RUB
 * - **Доступная ссуда: до 5,120 RUB**
 * 
 * ## Влияние на конвертацию сегмента
 * 
 * Полученные ссуды влияют на доступные для конвертации суммы:
 * - available_base_after_pay_debt = total_segment_base_cost - debt_amount
 * - Чем больше ссуда, тем меньше остаётся для конвертации в кошелёк/проект
 * - Премиальная часть не затрагивается и полностью доступна для капитализации
 * 
 * ## Результат процесса
 * 
 * Система ссуд обеспечивает:
 * 1. Ликвидность участников в процессе работы над проектом
 * 2. Справедливое распределение средств пропорционально вкладам
 * 3. Защиту от рисков невозврата через автоматическое погашение
 * 4. Стимулирование активного участия в проектах
 * 5. Эффективное использование привлечённых инвестиций
 * 
 * ## Связанные процессы
 * 
 * - @ref public_capital_execution_process "Исполнение проекта" - коммиты создают основу для ссуд
 * - @ref public_capital_project_investment_process "Инвестиции в проект" - инвестиции обеспечивают ссуды
 * - @ref public_capital_result_process "Приём результата" - ссуды погашаются при сдаче результата
 * - @ref public_capital_conversion_process "Конвертация взносов" - учитывает погашенные ссуды
 */
