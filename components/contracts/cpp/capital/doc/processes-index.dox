#if 0
/**
 * @page capital_processes_index Процессы контракта Capital
 * @ingroup public_capital_processes
 * 
 * Данная страница содержит полный перечень всех бизнес-процессов контракта Capital,
 * организованных по функциональным группам.
 * 
 * ## Инициализация и регистрация
 * 
 * @ref public_capital_registration_process "Регистрация вкладчиков и договоров УХД"
 * - базовый процесс приёма договора УХД от пайщика и обеспечения возможности
 * участия в проектах и программе капитализации.
 * 
 * **Действия:** regcontrib → approvereg | declinereg
 * 
 * ## Управление проектами
 * 
 * @ref public_capital_lifecycle_process "Управление жизненным циклом проекта"
 * - последовательное прохождение проекта через все стадии от создания до закрытия.
 * Определяет статусы проекта и контролирует доступные операции.
 * 
 * **Действия:** createproj → openproject → startproject → startvoting → cmpltvoting → closeproject
 * 
 * @ref public_capital_planning_process "Планирование проекта"
 * - определение ответственных лиц и целевых ориентиров проекта.
 * Создание экономической рамки для всех последующих расчётов.
 * 
 * **Действия:** setmaster → addauthor → setplan → expandexpnss
 * 
 * @ref public_capital_joining_process "Подписание приложений к договору УХД"
 * - процесс подписания приложения к договору УХД для конкретного проекта.
 * Юридическое обеспечение права участия в проекте.
 * 
 * **Действия:** signappndx → apprvappndx | dclineappndx
 * 
 * ## Создание результатов
 * 
 * @ref public_capital_execution_process "Исполнение проекта через коммиты"
 * - основной процесс создания ценности через фиксацию трудозатрат создателей.
 * Формирует фактическую себестоимость и премии участников.
 * 
 * **Действия:** createcmmt → approvecmmt | declinecmmt
 * 
 * ### Инвестиционные процессы
 * 
 * @ref  public_capital_project_investment_process "Инвестиции в проект"
 * - прямые инвестиции в конкретный проект с распределением на расходы и инвестиционный пул.
 * 
 * **Действия:** createinvest → approveinvst | declineinvst
 * 
 * @ref  public_capital_program_investment_process "Программные инвестиции"
 * - глобальные инвестиции в программу "Благорост" с последующей аллокацией по проектам.
 * 
 * **Действия:** createpinv → apprvpinv | declpinv, allocate, diallocate
 * 
 * ### Имущественные взносы
 * 
 * @ref  public_capital_project_property_process "Имущественные взносы в проект"
 * - внесение имущества в конкретный проект, увеличивает базовую стоимость.
 * 
 * **Действия:** createpjprp → approvepjprp | declinepjprp
 * 
 * @ref  public_capital_program_property_process "Имущественные взносы в программу"
 * - внесение имущества в программу "Благорост", увеличивает паевой фонд кооператива.
 * 
 * **Действия:** createpgprp → approvepgprp → authpgprp → act1pgprp → act2pgprp
 * 
 * ## Финансовое управление
 * 
 * @ref public_capital_debt_process "Управление ссудами"
 * - выдача беспроцентных ссуд участникам на основании их вкладов с автоматическим
 * погашением при сдаче результата.
 * 
 * **Действия:** createdebt → approvedebt → debtauthcnfr → debtpaycnfrm | debtpaydcln
 * 
 * @ref public_capital_expense_process "Управление расходами"
 * - резервирование и оплата расходов проекта через внешний шлюз.
 * 
 * **Действия:** createexpnse → approveexpns → capauthexpns → exppaycnfrm
 * 
 * @ref public_capital_unused_return_process "Возврат неиспользованных инвестиций"
 * - возврат инвесторам неиспользованной части инвестиций после закрытия проекта.
 * 
 * **Действия:** returnunused
 * 
 * ## Завершение и капитализация
 * 
 * @ref public_capital_voting_process "Голосование по методу Водянова"
 * - справедливое распределение 38.2% премий между участниками проекта
 * с использованием демократического голосования.
 * 
 * **Действия:** startvoting → submitvote → calcvotes → cmpltvoting
 * 
 * @ref public_capital_result_process "Приём результата в кооператив"
 * - принятие паевого взноса результатом интеллектуальной деятельности,
 * фиксация долей участников и подготовка к конвертации.
 * 
 * **Действия:** pushrslt → approverslt → authrslt → signact1 → signact2
 * 
 * @ref public_capital_conversion_process "Конвертация взносов"
 * - финальное распределение средств участника между тремя направлениями:
 * программа цифрового кошелька, программа капитализации и проект.
 * 
 * **Действия:** convertsegm
 * 
 * ## Распределение доходов
 * 
 * @ref public_capital_membership_process "Распределение членских взносов"
 * - постоянное распределение доходов между участниками программы и проектов
 * с использованием механизма CRPS.
 * 
 * **Действия:** fundprog → refreshprog, fundproj → refreshproj
 * 
 * @ref public_capital_withdrawal_process "Возврат средств участникам"
 * 
 * #### Возврат из проекта (withdraw_from_project)
 * - возврат накопленных членских взносов из кошелька проекта.
 * 
 * **Действия:** createwthd2 → approvewthd2 → capauthwthd2 | capdeclwthd2
 * 
 * #### Возврат из программы (withdraw_from_program)
 * - возврат накопленных членских взносов из программы "Благорост".
 * 
 * **Действия:** createwthd3 → approvewthd3 → capauthwthd3 | capdeclwthd3
 * 
 * ## Техническое управление
 * 
 * ### CRPS и сегменты (crps)
 * - механизм управления долями и справедливого распределения доходов.
 * 
 * **Действия:** addcontrib, rfrshsegment
 * 
 * ### Конфигурация (setconfig)
 * - управление настройками контракта (коэффициенты, проценты, параметры голосования).
 * 
 * **Действия:** setconfig
 * 
 * ## Взаимосвязь процессов
 * 
 * - процессы контракта Capital образуют связанную систему:
 * 
 * 1. **Инициализация** → Регистрация вкладчиков
 * 2. **Планирование** → Создание и планирование проекта → Присоединение участников
 * 3. **Исполнение** → Инвестиции → Коммиты → Ссуды → Расходы
 * 4. **Завершение** → Голосование → Приём результата → Конвертация
 * 5. **Капитализация** → Распределение доходов → Возврат средств
 * 
 * Каждый процесс имеет свои предварительные условия и влияет на возможность
 * выполнения других процессов, обеспечивая целостность и последовательность
 * всего жизненного цикла проекта.
 * 
 * @see capital_overview
 * @see public_capital_actions
 * @see public_capital_tables
 */
#endif