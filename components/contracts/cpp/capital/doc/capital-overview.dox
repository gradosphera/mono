/**
 * @page capital_overview Обзор контракта Capital
 * @ingroup public_capital
 * 
 * Смарт-контракт капитализации результатов интеллектуальной деятельности (Capital) предназначен 
 * для управления полным жизненным циклом создания результатов интеллектуальной деятельности - 
 * от регистрации участников до капитализации и распределения вознаграждений.
 * 
 * ## Назначение
 * 
 * Контракт Capital реализует комплексную систему учёта и распределения вознаграждений 
 * за результаты интеллектуальной деятельности в рамках кооперативной экономики. 
 * Он обеспечивает:
 * 
 * - Регистрацию и управление вкладчиками (участниками проектов)
 * - Планирование и управление жизненным циклом проектов
 * - Учёт различных видов вкладов (интеллектуальных, имущественных, денежных)
 * - Справедливое распределение премий по методу Водянова
 * - Капитализацию результатов через цифровую целевую потребительскую программу "Капитализация"
 * - Управление членскими взносами и их распределением среди вкладчиков
 * 
 * ## Основание
 * В основе математической модели контракта лежит принцип распределения справедливой выгоды между вкладчиками согласно Идеократии: https://blog.coopenomics.world/2025/04/08/идеократия/ 
 *
 * ## Роли участников
 * 
 * - **Вкладчик** - пайщик, принимающий участие в генерации результата интеллектуальной деятельности по договору УХД и проектным приложениям к нему
 * - **Автор** - вкладчик авторских прав на результат интеллектуальной деятельности
 * - **Создатель** - вкладчик, вносящий время на создание результата интеллектуальной деятельности
 * - **Координатор** - вкладчик инвестиционного плана проекта
 * - **Инвестор** - вкладчик денежных средств в проект
 * - **Пропертор** - вкладчик имущественных (не денежных и не временных) взносов в проект
 * - **Мастер** - вкладчик, ответственный за управление проектом и его результат
 * 
 * ## Основной процесс
 *
 * Процесс управления жизненным циклом проекта от создания до закрытия.
 * Определяет статусы проекта и контролирует, какие операции разрешены на каждом этапе.
 * 
 * ### Назначение процесса
 * 
 * Процесс обеспечивает последовательное прохождение проекта через все необходимые стадии:
 * от создания и планирования до генерации результата, голосования и финального закрытия.
 * Каждый статус проекта определяет набор доступных операций.
 * 
 * ### Диаграмма процесса
 * 
 * \htmlonly
 * <div class="mermaid">
 * sequenceDiagram
 *     participant U as Председатель
 *     participant M as Мастер
 *     participant C as Capital Contract
 *     
 *     U->>C: 1. createproj(создание проекта)
 *     Note over C: Статус: pending, is_opened = false
 *     
 *     M->>C: 2. openproject(открытие для инвестиций)
 *     Note over C: is_opened = true, копирование target_expense_pool
 *     
 *     M->>C: 3. startproject(запуск генерации)
 *     Note over C: Статус: active
 *     
 *     Note over C: Период генерации проекта
 *     
 *     M->>C: 4. startvoting(начало голосования)
 *     Note over C: Статус: voting
 *     
 *     Note over C: Период голосования
 *     
 *     M->>C: 5. cmpltvoting(завершение голосования)
 *     Note over C: Статус: completed
 *     
 *     Note over C: Период сдачи результатов
 *     
 *     M->>C: 6. closeproject(закрытие проекта)
 *     Note over C: Статус: closed
 *     
 *     opt При необходимости
 *         U->>C: 7. delproject(удаление проекта)
 *         Note over C: Проект удален
 *     end
 * </div>
 * \endhtmlonly
 * 
 * ### Пошаговое описание
 * 
 * #### Шаг 1: Создание проекта
 * Действие: @ref capital::createproj "Создание проекта"
 * 
 * Создается новый проект со следующими параметрами:
 * - Уникальный хэш проекта (project_hash)
 * - Хэш родительского проекта (parent_hash) - для иерархических проектов
 * - Название и описание проекта
 * - Метаданные проекта
 * 
 * Проект создается в статусе `pending` с флагом `is_opened = false`.
 * На этом этапе возможно только планирование для открытия приёма инвестиций или запуск приёма коммитов без плана. 
 * Созданный проект предоставляет информацию для фабрики документов, 
 * которая использует её при подготовке персональных приложений к договорам УХД пайщиков. 
 * Содержание идеи проекта и её детальное описание хранится за пределами контракта.
 * 
 * #### Шаг 2: Планирование проекта (опционально)
 * Действие: @ref capital::setplan "Планирование проекта"
 * 
 * Планирование проекта позволяет открыть приём инвестиций. Проект без плана инвестиции не принимает. 
 * Планирование проекта обеспечивается мастером и соавторами проекта, которых мастер добавляет к проекту. 
 * Планирование проекта состоит в создании плана проекта и назначении мастера.
 * План проекта содержит информацию о затратах на проект и о том, какие работы должны быть выполнены для достижения результата проекта.
 * Шаг может быть пропущен, если проекту не требуется денежных или имущественных инвестиций, или нет планов на их привлечение.
 * @pre Предварительные условия:
 * - Проект должен быть создан
 * - Проект должен быть в статусе `pending` или `active`
 * 
 * @post Проект получает флаг `is_opened = true`, что предоставляет инвесторам возможность инвестировать в проект.
 * 
 * #### Шаг 3: Открытие проекта для инвестиций (опционально)
 * Действие: @ref capital::openproject "Открытие проекта для инвестиций"
 * 
 * Открывает проект для приёма инвестиций:
 * - Устанавливает флаг `is_opened = true`
 * - Копирует `plan.target_expense_pool` в `fact.target_expense_pool`
 * - Разрешает операции инвестирования
 * 
 * @pre Предварительные условия:
 * - Проект должен иметь план (установленный через setplan)
 * - Должен быть назначен мастер проекта
 * 
 * #### Шаг 4: Запуск активного исполнения
 * Действие: @ref capital::startproject "Запуск проекта"
 * 
 * Переводит проект в статус `active`:
 * - Разрешает создание коммитов создателями
 * - Разрешает выдачу ссуд участникам
 * - Разрешает операции с расходами
 * 
 * @pre Предварительные условия:
 * - Проект должен быть открыт для инвестиций
 * - Должны быть привлечены минимальные инвестиции
 * 
 * #### Шаг 5: Начало голосования
 * Действие: @ref capital::startvoting "Начало голосования"
 * 
 * Переводит проект в статус `voting`:
 * - Инициализирует параметры голосования из конфига
 * - Рассчитывает суммы для распределения по методу Водянова
 * - Устанавливает дедлайн голосования
 * - Прекращает приём новых коммитов
 * 
 * @pre Предварительные условия:
 * - Проект в статусе `active`
 * - Все запланированные работы выполнены
 * 
 * @post Расчёт сумм для голосования:
 * - authors_equal_spread - равное распределение для авторов
 * - authors_bonuses_on_voting - авторские премии на голосование
 * - creators_direct_spread - прямое распределение создателям  
 * - creators_bonuses_on_voting - премии создателей на голосование
 * - total_voting_pool - общий пул для голосования
 * 
 * #### Шаг 6: Завершение голосования
 * Действие: @ref capital::cmpltvoting "Завершение голосования"
 * 
 * Переводит проект в статус `completed`:
 * - Фиксирует результаты голосования
 * - Разрешает сдачу результатов участниками
 * - Запрещает дальнейшие изменения в проекте
 * 
 * @pre Предварительные условия:
 * - Истек дедлайн голосования ИЛИ проголосовали все участники
 * 
 * #### Шаг 7: Закрытие проекта
 * Действие: @ref capital::closeproject "Закрытие проекта"
 * 
 * Переводит проект в финальный статус `closed`:
 * - Разрешает возврат неиспользованных инвестиций
 * - Разрешает конвертацию сегментов участников
 * - Фиксирует финальные результаты проекта
 * 
 * @pre Предварительные условия:
 * - Все участники сдали результаты
 * - Завершены все финансовые операции
 * 
 * #### Шаг 8: Удаление проекта (опционально)
 * Действие: @ref capital::delproject "Удаление проекта"
 * 
 * Полное удаление проекта из системы:
 * - Удаляет все связанные данные
 * - Требует аккуратных проверок целостности
 * - Используется в исключительных случаях
 * 
 * ### Состояния проекта и разрешенные операции
 * 
 * | Статус | Разрешенные операции |
 * |--------|---------------------|
 * | `pending` | Назначение мастера, добавление соавторов, планирование |
 * | `pending` + `is_opened` | + Инвестиции, аллокации |
 * | `active` | + Коммиты, ссуды, расходы, имущественные взносы |
 * | `voting` | + Голосование |
 * | `completed` | + Подсчёт голосов, Приём результатов |
 * | `closed` | + Возврат неиспользованных средств, конвертация |
 * 
 * ### Результат процесса
 * 
 * После прохождения полного жизненного цикла:
 * 1. Создан результат интеллектуальной деятельности и внесён в кооператив как паевой взнос
 * 2. Справедливо распределены вознаграждения между участниками
 * 3. Возвращены неиспользованные инвестиции
 * 4. Зафиксированы доли участников для получения членских взносов и возврата паевых взносов
 * 
 * ## Вспомогательные процессы
 * 
 * ### 1. Инициализация и регистрация
 * - @ref public_capital_registration_process "Регистрация вкладчиков по договорам УХД"
 * - @ref public_capital_joining_process "Допуск вкладчиков к проекту через приём приложений к договору УХД"
 * 
 * ### 2. Управление проектами  
 * - @ref public_capital_addauthor_process "Добавление соавторов"
 * - @ref public_capital_planning_process "Планирование проекта"
 * 
 * ### 3. Создание результатов
 * - @ref public_capital_execution_process "Генерация результата проекта через коммиты"
 * - @ref public_capital_project_investment_process "Инвестиции в проект"  
 * - @ref public_capital_program_investment_process "Программные инвестиции"
 * - @ref public_capital_project_property_process "Имущественные взносы в проект"
 * - @ref public_capital_program_property_process "Имущественные взносы в программу"
 * 
 * ### 4. Финансовое управление
 * - @ref public_capital_debt_process "Управление ссудами"
 * - @ref public_capital_expense_process "Управление расходами"
 * - @ref public_capital_unused_return_process "Возврат неиспользованных инвестиций"
 * 
 * ### 5. Взнос результата
 * - @ref public_capital_voting_process "Голосование по методу Водянова"
 * - @ref public_capital_result_process "Приём результата в кооператив"
 * - @ref public_capital_conversion_process "Конвертация взносов"
 * 
 * ### 6. Распределение выгоды
 * - @ref public_capital_membership_process "Распределение членских взносов"
 * - @ref public_capital_withdrawal_process "Возврат паевых взносов вкладчикам"
 * 
 * @see public_capital_actions
 * @see public_capital_tables
 * @see public_capital_consts
 */
